# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: test_debug

on:
  push:
    branches: [ master, citest, cidebug ]
  pull_request:
    branches: [ master ]

jobs:

  test:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Set up R and UTF8
      run: |
        sudo apt-get install -yq locales tzdata
        sudo locale-gen "en_US.UTF-8"
        sudo bash -c 'echo "LANG=en_US.UTF-8" > /etc/default/locale'
        echo '::set-env name=LANG::en_US.UTF-8'
        sudo apt-get install -yq r-base
    - name: test UTF-8 in R
      run: |
        printf "s = intToUtf8(500:550) \n s" | R --vanilla
        printf "s = intToUtf8(500:550) \n s \n sS = toString(s) \n sS" | R --vanilla
        printf "s = intToUtf8(500:550) \n s \n sS = toString(s) \n sS \n ic = iconv(sS, to=\"UTF-8\") \n ic" | R --vanilla
        printf "s = intToUtf8(500:550) \n s \n sS = toString(s) \n sS \n ic = iconv(sS, to=\"UTF-8\") \n ic \n pp = paste(\"<v>\",ic,\"</v>\",sep=\"\") \n pp" | R --vanilla
    - name: test UTF-8 in R with XML
      run: |
        cp RCaller/src/main/resources/runiversal.r testutf8.r
        echo "s = intToUtf8(500:550)" >> testutf8.r
        echo 'cat(makexml(obj=s, name="s"), file="testS.xml")' >> testutf8.r
        cat testutf8.r | R --vanilla
        cat testS.xml
    - name: test UTF-8 without JUnit
      run: cd RCaller && env && mvn compile && mvn exec:exec -Dexec.executable="java" -Dexec.args="${JAVA_ARGS} -cp %classpath:${EXTERNAL_CLASSPATH} examples.Utf8Example"
    - name: Build and test with Maven
      run: cd RCaller && mvn test
